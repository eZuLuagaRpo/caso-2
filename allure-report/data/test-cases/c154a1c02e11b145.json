{"uid":"c154a1c02e11b145","name":"Test Connection Error Handling","fullName":"tests.test_02_request#test_connection_error","historyId":"27d324e3f6818ee1f52130595c6e4e70","time":{"start":1744782968435,"stop":1744782968436,"duration":1},"description":"Verifica que la función getData maneja correctamente errores de conexión, devuelve False y no crea un archivo Excel.","descriptionHtml":"<p>Verifica que la función getData maneja correctamente errores de conexión, devuelve False y no crea un archivo Excel.</p>\n","status":"broken","statusMessage":"Exception: Connection error","statusTrace":"temp_dir = WindowsPath('C:/Users/emanu/AppData/Local/Temp/pytest-of-emanu/pytest-61/test_connection_error0')\n\n    @allure.feature(\"Data Request System\")\n    @allure.title(\"Test Connection Error Handling\")\n    @allure.description(\"Verifica que la función getData maneja correctamente errores de conexión, devuelve False y no crea un archivo Excel.\")\n    @allure.tag(\"request\", \"unit\", \"negative\")\n    @allure.severity(Severity.NORMAL)\n    def test_connection_error(temp_dir):\n        with patch(\"modules._02request.requests.get\", side_effect=Exception(\"Connection error\")):\n>           response = getData(\"https://example.com/api/data\", str(temp_dir))\n\ntests\\test_02_request.py:81: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodules\\_02request.py:5: in getData\n    response = requests.get(url)\nC:\\Users\\emanu\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\unittest\\mock.py:1167: in __call__\n    return self._mock_call(*args, **kwargs)\nC:\\Users\\emanu\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\unittest\\mock.py:1171: in _mock_call\n    return self._execute_mock_call(*args, **kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <MagicMock name='get' id='2770933367872'>, args = ('https://example.com/api/data',), kwargs = {}, effect = Exception('Connection error')\n\n    def _execute_mock_call(self, /, *args, **kwargs):\n        # separate from _increment_mock_call so that awaited functions are\n        # executed separately from their call, also AsyncMock overrides this method\n    \n        effect = self.side_effect\n        if effect is not None:\n            if _is_exception(effect):\n>               raise effect\nE               Exception: Connection error\n\nC:\\Users\\emanu\\AppData\\Local\\Programs\\Python\\Python313\\Lib\\unittest\\mock.py:1226: Exception","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"tmp_path_factory","time":{"start":1744782967635,"stop":1744782967635,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"tmp_path","time":{"start":1744782968434,"stop":1744782968435,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0},{"name":"temp_dir","time":{"start":1744782968435,"stop":1744782968435,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"afterStages":[{"name":"tmp_path::0","time":{"start":1744782968498,"stop":1744782968498,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"severity","value":"normal"},{"name":"tag","value":"negative"},{"name":"tag","value":"unit"},{"name":"feature","value":"Data Request System"},{"name":"tag","value":"request"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_02_request"},{"name":"host","value":"emanuelZuluaga"},{"name":"thread","value":"26332-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_02_request"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test Defects","matchedStatuses":["broken"]}],"tags":["request","negative","unit"]},"source":"c154a1c02e11b145.json","parameterValues":[]}