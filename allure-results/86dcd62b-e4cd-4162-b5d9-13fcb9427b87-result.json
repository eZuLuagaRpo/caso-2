{"name": "Test Spinner Stops on Error", "status": "failed", "statusDetails": {"message": "AssertionError: Spinner did not stop after error\nassert not True\n +  where True = is_alive()\n +    where is_alive = <Thread(Thread-2 (spinner), started 14444)>.is_alive", "trace": "@allure.feature(\"Spinner Functionality\")\n    @allure.title(\"Test Spinner Stops on Error\")\n    @allure.description(\"Verifica que el hilo del spinner se detiene correctamente cuando ocurre un error en el programa, asegurando que no permanezca activo.\")\n    @allure.tag(\"spinner\", \"unit\", \"positive\")\n    @allure.severity(Severity.CRITICAL)\n    def test_spinner_stops_on_error():\n        stop_event = threading.Event()\n        spinner_thread = threading.Thread(target=spinner, args=(stop_event,))\n        spinner_thread.start()\n    \n        try:\n            time.sleep(0.5)\n>           raise RuntimeError(\"Simulated error\")\nE           RuntimeError: Simulated error\n\ntests\\test_00_spinner.py:39: RuntimeError\n\nDuring handling of the above exception, another exception occurred:\n\n    @allure.feature(\"Spinner Functionality\")\n    @allure.title(\"Test Spinner Stops on Error\")\n    @allure.description(\"Verifica que el hilo del spinner se detiene correctamente cuando ocurre un error en el programa, asegurando que no permanezca activo.\")\n    @allure.tag(\"spinner\", \"unit\", \"positive\")\n    @allure.severity(Severity.CRITICAL)\n    def test_spinner_stops_on_error():\n        stop_event = threading.Event()\n        spinner_thread = threading.Thread(target=spinner, args=(stop_event,))\n        spinner_thread.start()\n    \n        try:\n            time.sleep(0.5)\n            raise RuntimeError(\"Simulated error\")\n        except RuntimeError:\n            time.sleep(0.5)\n            spinner_thread.join(timeout=0.1)\n>           assert not spinner_thread.is_alive(), \"Spinner did not stop after error\"\nE           AssertionError: Spinner did not stop after error\nE           assert not True\nE            +  where True = is_alive()\nE            +    where is_alive = <Thread(Thread-2 (spinner), started 14444)>.is_alive\n\ntests\\test_00_spinner.py:43: AssertionError"}, "description": "Verifica que el hilo del spinner se detiene correctamente cuando ocurre un error en el programa, asegurando que no permanezca activo.", "attachments": [{"name": "stdout", "source": "2cf37c74-7640-4268-954d-b33ca90ecab7-attachment.txt", "type": "text/plain"}], "start": 1744782966485, "stop": 1744782967589, "uuid": "8e28d7d3-9600-44ac-af33-0acb65cf2f93", "historyId": "a67d741b5218fc52e0d1d7d315c7a300", "testCaseId": "a67d741b5218fc52e0d1d7d315c7a300", "fullName": "tests.test_00_spinner#test_spinner_stops_on_error", "labels": [{"name": "tag", "value": "spinner"}, {"name": "tag", "value": "unit"}, {"name": "severity", "value": "critical"}, {"name": "feature", "value": "Spinner Functionality"}, {"name": "tag", "value": "positive"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_00_spinner"}, {"name": "host", "value": "emanuelZuluaga"}, {"name": "thread", "value": "26332-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_00_spinner"}]}